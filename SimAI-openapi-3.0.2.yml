#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: SimAI 0.4
components:
  schemas:
    Error404:
      description: Not found
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 404
    ArrayOfSaiContact:
      description: List of Contact
      type: array
      items:
        $ref: '#/components/schemas/SaiContact'
    PublicationResult:
      description: Publication result
      type: object
      properties:
        mime:
          description: MIME type
          type: string
        content:
          description: Content (plain text or base64 encoded)
          type: string
    PlaceData:
      description: Place data
      type: object
      properties:
        coord:
          description: Geographical coordinates
          type: string
        address:
          description: Address
          type: string
        row_id:
          description: Row ID
          type: string
        label1:
          description: 'Label #1'
          type: string
        label2:
          description: 'Label #2'
          type: string
        label3:
          description: 'Label #3'
          type: string
    SaiContact:
      description: |-
        Contact:

        Management of commercial contact and module registration.
      type: object
      properties:
        saiCntModuleId:
          description: Module
          type: string
          maxLength: 11
        saiCntModuleId__mdl_xml:
          description: Module file
          type: object
        saiCntModuleId__mdl_name:
          description: Module name
          type: string
          maxLength: 100
        saiCntSended:
          description: sended
          type: boolean
        saiCntViewhomeId__viw_name:
          description: Home page Name
          type: string
          maxLength: 100
        saiCntDeletion:
          description: Deletion
          type: string
          maxLength: 19
          example: yyyy-MM-dd HH:mm:ss
        saiContactName:
          description: Name
          type: string
          maxLength: 100
        saiContactEmail:
          description: Email
          type: string
          maxLength: 100
        row_id:
          description: Unique technical row ID
          type: string
          maxLength: 11
        saiContactPhone:
          description: Phone
          type: string
          maxLength: 100
        saiCntViewhomeId:
          description: Home page
          type: string
          maxLength: 11
        saiContactComment:
          description: Comment
          type: string
          maxLength: 1000
    PlaceMapData:
      description: Places map data
      type: object
      properties:
        places:
          description: Places
          type: array
          items:
            $ref: '#/components/schemas/PlaceData'
        name:
          description: Name
          type: string
    SaiApplicationExample:
      description: |-
        Application example:

        Chat prompt examples
      type: object
      properties:
        saiSaePromptEnglish:
          description: Sae prompt english
          type: string
          maxLength: 1500
        saiSaeTitle:
          description: Sae title
          type: string
          maxLength: 50
        saiSaeSummary:
          description: Sae summary
          type: string
          maxLength: 350
        saiSaeTitleEnglish:
          description: Sae title english
          type: string
          maxLength: 100
        saiSaePrompt:
          description: Sae prompt
          type: string
          maxLength: 1500
        row_id:
          description: Unique technical row ID
          type: string
          maxLength: 11
        saiSaeSummaryEnglish:
          description: Sae summary english
          type: string
          maxLength: 350
    ActionResult:
      description: Action result
      type: object
      properties:
        result:
          description: Action result
          type: string
    TreeviewData:
      type: object
      properties:
        item:
          description: Object item with lists of linked objects' items
          type: object
    Error400:
      description: Bad request
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 400
    Error401:
      description: Unauthorized
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 401
    Error500:
      description: Internal server error
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 500
    ArrayOfSaiApplicationExample:
      description: List of Application example
      type: array
      items:
        $ref: '#/components/schemas/SaiApplicationExample'
    Error403:
      description: Forbidden
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 403
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: Simplicite token
      scheme: bearer
      type: http
servers:
- url: /api
openapi: 3.0.2
paths:
  /rest/SaiApplicationExample:
    get:
      summary: Search SaiApplicationExample business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-saiapplicationexample-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfSaiApplicationExample'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: saiSaeTitle
        description: Search filter for Sae title
        required: false
      - schema:
          type: string
        in: query
        name: saiSaeTitleEnglish
        description: Search filter for Sae title english
        required: false
      - schema:
          type: string
        in: query
        name: saiSaeSummary
        description: Search filter for Sae summary
        required: false
      - schema:
          type: string
        in: query
        name: saiSaePrompt
        description: Search filter for Sae prompt
        required: false
      - schema:
          type: string
        in: query
        name: saiSaeSummaryEnglish
        description: Search filter for Sae summary english
        required: false
      - schema:
          type: string
        in: query
        name: saiSaePromptEnglish
        description: Search filter for Sae prompt english
        required: false
      tags:
      - SaiApplicationExample
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      operationId: login
      responses:
        '200':
          description: Successful login
          content:
            application/json: {}
            text/plain: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: string
          enum:
          - json
          - oauth2
          - token
        in: query
        name: _output
        description: Optional output format
        required: false
      tags:
      - session
  /rest/SaiApplicationExample/{row_id}:
    post:
      summary: Create a new SaiApplicationExample business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaiApplicationExample'
      operationId: obj-saiapplicationexample-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaiApplicationExample'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SaiApplicationExample
    get:
      summary: Get a SaiApplicationExample business object record
      security:
      - bearerAuth: []
      operationId: obj-saiapplicationexample-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaiApplicationExample'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - SaiApplicationExample
    delete:
      summary: Delete a SaiApplicationExample business object record
      security:
      - bearerAuth: []
      operationId: obj-saiapplicationexample-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SaiApplicationExample
    put:
      summary: Update a SaiApplicationExample business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaiApplicationExample'
      operationId: obj-saiapplicationexample-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaiApplicationExample'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SaiApplicationExample
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      operationId: logout
      responses:
        '200':
          description: Successfull logout
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      tags:
      - session
  /rest/SaiContact/{row_id}:
    post:
      summary: Create a new SaiContact business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaiContact'
      operationId: obj-saicontact-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaiContact'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SaiContact
    get:
      summary: Get a SaiContact business object record
      security:
      - bearerAuth: []
      operationId: obj-saicontact-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaiContact'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - SaiContact
    delete:
      summary: Delete a SaiContact business object record
      security:
      - bearerAuth: []
      operationId: obj-saicontact-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SaiContact
    put:
      summary: Update a SaiContact business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaiContact'
      operationId: obj-saicontact-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaiContact'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - SaiContact
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: boolean
        in: query
        name: texts
        description: Texts?
        required: false
      tags:
      - session
  /rest/SaiContact:
    get:
      summary: Search SaiContact business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-saicontact-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfSaiContact'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: saiContactName
        description: Search filter for Name
        required: false
      - schema:
          type: string
        in: query
        name: saiContactEmail
        description: Search filter for Email
        required: false
      - schema:
          type: string
        in: query
        name: saiContactPhone
        description: Search filter for Phone
        required: false
      - schema:
          type: string
        in: query
        name: saiContactComment
        description: Search filter for Comment
        required: false
      - schema:
          type: string
        in: query
        name: saiCntModuleId
        description: Search filter for Module
        required: false
      - schema:
          type: string
        in: query
        name: saiCntModuleId__mdl_name
        description: Search filter for Module name
        required: false
      - schema:
          type: string
        in: query
        name: saiCntModuleId__mdl_xml
        description: Search filter for Module file
        required: false
      - schema:
          type: boolean
        in: query
        name: saiCntSended
        description: Search filter for sended
        required: false
      - schema:
          type: string
        in: query
        name: saiCntDeletion
        description: Search filter for Deletion
        required: false
      - schema:
          type: string
        in: query
        name: saiCntViewhomeId
        description: Search filter for Home page
        required: false
      - schema:
          type: string
        in: query
        name: saiCntViewhomeId__viw_name
        description: Search filter for Home page Name
        required: false
      tags:
      - SaiContact
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module SimAI
  title: SimAI
  version: '0.4'
tags:
- name: SaiApplicationExample
  description: Application example
- name: SaiContact
  description: Contact
